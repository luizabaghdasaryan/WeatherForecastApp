@page "/weather/{region}/{id:int}"
@using UI.Components;
@using UI.Services;
@using global::Shared.Models;
@inject IForecastService service;
@inject NavigationManager navigation

<h3>Daily Weather Details for @Region </h3>

<div style="text-align: center; margin-top: 20px;">
    <button @onclick="CreateDailyWeather" style="padding: 10px 20px; margin-right: 10px;">Create Daily Weather</button>
    <button @onclick="CreateWeeklyWeather" style="padding: 10px 20px;">Create Weekly Weather</button>
</div> 
<br />

@if (dailyForecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-sm table-bordered table-striped">
        <thead>
            <tr>
                <th>Date</th>
                <th>Day of Week</th>
                <th>Max Temp. (C)</th>
                <th>Min Temp. (C)</th>
                <th>Summary</th>
                <th colspan="3">  </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in dailyForecasts)
            {
                <tr>
                    <td>@forecast.DayWithMonth</td>
                    <td>@forecast.DayOfWeek</td>
                    <td>@forecast.MinTemperature</td>
                    <td>@forecast.MaxTemperature</td>
                    <td>@forecast.Summary</td>
                    <td class="align-middle">
                        <button class="btn btn-primary" style="background-color:darkmagenta;border-color:darkmagenta" @onclick="() => ViewDetails(forecast.Id)">View</button>
                    </td>
                    <td class="align-middle">
                        <button class="btn btn-primary" @onclick="() => EditContact(forecast.Id)">Edit</button>
                    </td>
                    <td class="align-middle">
                        <button class="btn btn-danger" @onclick="() => DeleteContact(forecast.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <OnDeleteModal @ref="_modal" Region="@Region" RegionId="@Id"/>
}

@code {
    [Parameter]
    public string Region { get; set; } = string.Empty;

    [Parameter]
    public int Id { get; set; }

    private DailyForecastModel[]? dailyForecasts;

    private OnDeleteModal? _modal;

    protected override async Task OnInitializedAsync()
    {
        dailyForecasts = await service.GetDailyForecastsByRegion(Id);
    }

    private void ViewDetails(int id)
    {
        navigation.NavigateTo($"weather-details/{id}/{Region}/{Id}");
    }

    private void EditContact(int id)
    {
        navigation.NavigateTo($"weather-edit/{id}/{Region}/{Id}");
    }

    private void DeleteContact(int id)
    {
        _modal.Id = id;
        _modal.Show();
    }

    private void CreateDailyWeather()
    {
        navigation.NavigateTo($"weather-create-daily/{Region}/{Id}");
    }

    private void CreateWeeklyWeather()
    {
        navigation.NavigateTo($"weather-create-weekly/{Region}/{Id}");
    }
}